PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
PROBS3=PROBS1
PROBS4=PROBS3
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(length(MeanInts),0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(length(MeanInts),0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes[1]*I1)*Dose+mu+Ints[1]*I1)
I1=rbinom(1,1,prob1)
PROBS3[b,]=exp(exp(slope+Slopes[2]*I1)*Dose+mu+Ints[2]*I1)
I1=rbinom(1,1,prob1)
PROBS4[b,]=exp(exp(slope+Slopes[3]*I1)*Dose+mu+Ints[3]*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
PROBS3=PROBS3/(1+PROBS3)
PROBS4=PROBS4/(1+PROBS4)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
GROUP[[3]]=PROBS3
GROUP[[4]]=PROBS4
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
c=estBetaParams(colMeans(GROUP[[3]],na.rm=TRUE),apply(GROUP[[3]],2,var,na.rm=TRUE))
d=estBetaParams(colMeans(GROUP[[4]],na.rm=TRUE),apply(GROUP[[4]],2,var,na.rm=TRUE))
return(mean((a+b+c+d)/3));
}
}
#GetDistEXP(3,3,.01,.01)
GetESS(5,meanmu,meanslope,MeanInts,MeanSlopes,5,5,1,1)
MeanInts
MeanSlopes
GetESS(5,meanmu,meanslope,MeanInts,MeanSlopes,5,5,1,1)
GetESS=function(nDose,meanmu,meanslope,MeanInts,MeanSlopes,varint,varint1,varbeta,varbeta1){
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(mu+beta)
}
if(length(MeanInts)==1){
GROUP=as.list(c(0,0))
B=100000
PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(1,0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(1,0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes*I1)*Dose+mu+Ints*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
return(mean((a+b)/2));
}
if(length(MeanInts)==2){
GROUP=as.list(c(0,0,0))
B=100000
PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
PROBS3=PROBS1
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(length(MeanInts),0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(length(MeanInts),0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes[1]*I1)*Dose+mu+Ints[1]*I1)
I1=rbinom(1,1,prob1)
PROBS3[b,]=exp(exp(slope+Slopes[2]*I1)*Dose+mu+Ints[2]*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
PROBS3=PROBS3/(1+PROBS3)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
GROUP[[3]]=PROBS3
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
c=estBetaParams(colMeans(GROUP[[3]],na.rm=TRUE),apply(GROUP[[3]],2,var,na.rm=TRUE))
return(mean((a+b+c)/3));
}
if(length(MeanInts)==3){
GROUP=as.list(c(0,0,0,0))
B=100000
PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
PROBS3=PROBS1
PROBS4=PROBS3
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(length(MeanInts),0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(length(MeanInts),0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes[1]*I1)*Dose+mu+Ints[1]*I1)
I1=rbinom(1,1,prob1)
PROBS3[b,]=exp(exp(slope+Slopes[2]*I1)*Dose+mu+Ints[2]*I1)
I1=rbinom(1,1,prob1)
PROBS4[b,]=exp(exp(slope+Slopes[3]*I1)*Dose+mu+Ints[3]*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
PROBS3=PROBS3/(1+PROBS3)
PROBS4=PROBS4/(1+PROBS4)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
GROUP[[3]]=PROBS3
GROUP[[4]]=PROBS4
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
c=estBetaParams(colMeans(GROUP[[3]],na.rm=TRUE),apply(GROUP[[3]],2,var,na.rm=TRUE))
d=estBetaParams(colMeans(GROUP[[4]],na.rm=TRUE),apply(GROUP[[4]],2,var,na.rm=TRUE))
return(mean((a+b+c+d)/3));
}
}
#GetDistEXP(3,3,.01,.01)
GetESS(5,meanmu,meanslope,MeanInts,MeanSlopes,5,5,1,1)
GetESS(Dose,meanmu,meanslope,MeanInts,MeanSlopes,5,5,1,1)
GetESS=function(Dose,meanmu,meanslope,MeanInts,MeanSlopes,varint,varbeta){
nDose=length(Dose)
varint1=varint
varbeta1=varbeta
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(mu+beta)
}
if(length(MeanInts)==1){
GROUP=as.list(c(0,0))
B=100000
PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(1,0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(1,0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes*I1)*Dose+mu+Ints*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
return(mean((a+b)/2));
}
if(length(MeanInts)==2){
GROUP=as.list(c(0,0,0))
B=100000
PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
PROBS3=PROBS1
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(length(MeanInts),0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(length(MeanInts),0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes[1]*I1)*Dose+mu+Ints[1]*I1)
I1=rbinom(1,1,prob1)
PROBS3[b,]=exp(exp(slope+Slopes[2]*I1)*Dose+mu+Ints[2]*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
PROBS3=PROBS3/(1+PROBS3)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
GROUP[[3]]=PROBS3
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
c=estBetaParams(colMeans(GROUP[[3]],na.rm=TRUE),apply(GROUP[[3]],2,var,na.rm=TRUE))
return(mean((a+b+c)/3));
}
if(length(MeanInts)==3){
GROUP=as.list(c(0,0,0,0))
B=100000
PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
PROBS3=PROBS1
PROBS4=PROBS3
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(length(MeanInts),0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(length(MeanInts),0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes[1]*I1)*Dose+mu+Ints[1]*I1)
I1=rbinom(1,1,prob1)
PROBS3[b,]=exp(exp(slope+Slopes[2]*I1)*Dose+mu+Ints[2]*I1)
I1=rbinom(1,1,prob1)
PROBS4[b,]=exp(exp(slope+Slopes[3]*I1)*Dose+mu+Ints[3]*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
PROBS3=PROBS3/(1+PROBS3)
PROBS4=PROBS4/(1+PROBS4)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
GROUP[[3]]=PROBS3
GROUP[[4]]=PROBS4
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
c=estBetaParams(colMeans(GROUP[[3]],na.rm=TRUE),apply(GROUP[[3]],2,var,na.rm=TRUE))
d=estBetaParams(colMeans(GROUP[[4]],na.rm=TRUE),apply(GROUP[[4]],2,var,na.rm=TRUE))
return(mean((a+b+c+d)/3));
}
}
GetESS(Dose,meanmu,meanslope,MeanInts,MeanSlopes,5,5,1,1)
length(Dose)
B
nDose=length(Dose)
varint1=varint
varbeta1=varbeta
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(mu+beta)
}
MeanInts
varbeta=1
varint=1
if(length(MeanInts)==3){
GROUP=as.list(c(0,0,0,0))
B=100000
PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
PROBS3=PROBS1
PROBS4=PROBS3
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(length(MeanInts),0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(length(MeanInts),0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes[1]*I1)*Dose+mu+Ints[1]*I1)
I1=rbinom(1,1,prob1)
PROBS3[b,]=exp(exp(slope+Slopes[2]*I1)*Dose+mu+Ints[2]*I1)
I1=rbinom(1,1,prob1)
PROBS4[b,]=exp(exp(slope+Slopes[3]*I1)*Dose+mu+Ints[3]*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
PROBS3=PROBS3/(1+PROBS3)
PROBS4=PROBS4/(1+PROBS4)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
GROUP[[3]]=PROBS3
GROUP[[4]]=PROBS4
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
c=estBetaParams(colMeans(GROUP[[3]],na.rm=TRUE),apply(GROUP[[3]],2,var,na.rm=TRUE))
d=estBetaParams(colMeans(GROUP[[4]],na.rm=TRUE),apply(GROUP[[4]],2,var,na.rm=TRUE))
return(mean((a+b+c+d)/3));
}
varint1=varint
if(length(MeanInts)==3){
GROUP=as.list(c(0,0,0,0))
B=100000
PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
PROBS3=PROBS1
PROBS4=PROBS3
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(length(MeanInts),0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(length(MeanInts),0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes[1]*I1)*Dose+mu+Ints[1]*I1)
I1=rbinom(1,1,prob1)
PROBS3[b,]=exp(exp(slope+Slopes[2]*I1)*Dose+mu+Ints[2]*I1)
I1=rbinom(1,1,prob1)
PROBS4[b,]=exp(exp(slope+Slopes[3]*I1)*Dose+mu+Ints[3]*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
PROBS3=PROBS3/(1+PROBS3)
PROBS4=PROBS4/(1+PROBS4)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
GROUP[[3]]=PROBS3
GROUP[[4]]=PROBS4
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
c=estBetaParams(colMeans(GROUP[[3]],na.rm=TRUE),apply(GROUP[[3]],2,var,na.rm=TRUE))
d=estBetaParams(colMeans(GROUP[[4]],na.rm=TRUE),apply(GROUP[[4]],2,var,na.rm=TRUE))
return(mean((a+b+c+d)/3));
}
GetESS=function(Dose,meanmu,meanslope,MeanInts,MeanSlopes,varint,varbeta){
nDose=length(Dose)
varint1=varint
varbeta1=varbeta
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(mu+beta)
}
if(length(MeanInts)==1){
GROUP=as.list(c(0,0))
B=100000
PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(1,0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(1,0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes*I1)*Dose+mu+Ints*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
return(mean((a+b)/2));
}
if(length(MeanInts)==2){
GROUP=as.list(c(0,0,0))
B=100000
PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
PROBS3=PROBS1
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(length(MeanInts),0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(length(MeanInts),0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes[1]*I1)*Dose+mu+Ints[1]*I1)
I1=rbinom(1,1,prob1)
PROBS3[b,]=exp(exp(slope+Slopes[2]*I1)*Dose+mu+Ints[2]*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
PROBS3=PROBS3/(1+PROBS3)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
GROUP[[3]]=PROBS3
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
c=estBetaParams(colMeans(GROUP[[3]],na.rm=TRUE),apply(GROUP[[3]],2,var,na.rm=TRUE))
return(mean((a+b+c)/3));
}
if(length(MeanInts)==3){
GROUP=as.list(c(0,0,0,0))
B=100000
PROBS1 = matrix(rep(NA,B*nDose),nrow=B)
PROBS2 = matrix(rep(NA,B*nDose),nrow=B)
PROBS3=PROBS1
PROBS4=PROBS3
for(b in 1:B){
slope=meanslope + rnorm(1,0,sqrt(varbeta))
mu=meanmu + rnorm(1,0,sqrt(varint))
Ints=MeanInts + rnorm(length(MeanInts),0,sqrt(varint1))
Slopes=MeanSlopes + rnorm(length(MeanInts),0,sqrt(varbeta1))
I1=rbinom(1,1,prob1)
PROBS1[b,]=exp(exp(slope)*Dose+mu)
PROBS2[b,]=exp(exp(slope+Slopes[1]*I1)*Dose+mu+Ints[1]*I1)
I1=rbinom(1,1,prob1)
PROBS3[b,]=exp(exp(slope+Slopes[2]*I1)*Dose+mu+Ints[2]*I1)
I1=rbinom(1,1,prob1)
PROBS4[b,]=exp(exp(slope+Slopes[3]*I1)*Dose+mu+Ints[3]*I1)
}
PROBS1=PROBS1/(1+PROBS1)
PROBS2=PROBS2/(1+PROBS2)
PROBS3=PROBS3/(1+PROBS3)
PROBS4=PROBS4/(1+PROBS4)
GROUP[[1]]=PROBS1
GROUP[[2]]=PROBS2
GROUP[[3]]=PROBS3
GROUP[[4]]=PROBS4
a=estBetaParams(colMeans(GROUP[[1]],na.rm=TRUE),apply(GROUP[[1]],2,var,na.rm=TRUE))
b=estBetaParams(colMeans(GROUP[[2]],na.rm=TRUE),apply(GROUP[[2]],2,var,na.rm=TRUE))
c=estBetaParams(colMeans(GROUP[[3]],na.rm=TRUE),apply(GROUP[[3]],2,var,na.rm=TRUE))
d=estBetaParams(colMeans(GROUP[[4]],na.rm=TRUE),apply(GROUP[[4]],2,var,na.rm=TRUE))
return(mean((a+b+c+d)/3));
}
}
GetESS(Dose,meanmu,meanslope,MeanInts,MeanSlopes,1,1)
GetESS(Dose,meanmu,meanslope,MeanInts,MeanSlopes,5,1)
library(SubTite)
document()
library(SubTite)
document()
library(SubTite)
document()
library(SubTite)
document()
library(SubTite)
document()
library(SubTite)
library(SubTite)
library(SubTite)
document()
library(SubTite)
document()
library(SubTite)
library(SubTite)
library(SubTite)
document()
library(SubTite)
library(SubTite)
document()
library(SubTite)
library(SubTite)
document()
library(SubTite)
library(SubTite)
document()
library(SubTite)
library(SubTite)
library(SubTite)
document()
document()
library(SubTite)
library(SubTite)
document()
library(SubTite)
library(SubTite)
library(SubTite)
document()
library(SubTite)
document()
document()
library(SubTite)
library(SubTite)
library(SubTite)
document()
document()
library(SubTite)
library(SubTite)
library(SubTite)
library(SubTite)
X=c(-0.37, -0.13, 0.05, 0.07, 0.02 )
X
Y=exp(X)
Y/sum(Y)
Y=X-.37+1
Y
Y=X+.37+1
Y
Y/sum(Y)
Y=X+.37+.1
Y/sum(Y)
Y=X+.37+.01
Y/sum(Y)
X
Y=X+1
Y/sum(Y)
Y
X1=c(-.37,-.13,-.2,-.25,-.3)
Y=X+.37+.01
Y/sum(Y)
Y=X1+.37+.01
Y/sum(Y)
X
X2=X[c(3,4,5)]
X2/sum(X2)
X2/sum(X2)
X2/sum(X2)
X2/sum(X2)
X2/sum(X2)
X2/sum(X2)
X2/sum(X2)
exp(X)
exp(X)/sum(exp(X))
Y=10^X
Y
Y/sum(Y)
Y=100^X
Y/sum(Y)
Y
X
Y=1000^X
Y/sum(Y)
Y=10000^X
Y/sum(Y)
Y=100^X
Y/sum(Y)
X1=(X-mean(X))/sd(X)
X1
Y=exp(X1)
Y/sum(Y)
Y=100^X1
Y/sum(Y)
Y[3:5]/sum(Y)
Y=10^X1
Y/sum(Y)
