{
    "collab_server" : "",
    "contents" : "#' Gives the subgroup specific optimal dose vector.\n#'  Returns a list containing the optimal doses to enroll each subgroup at and the subgroups that should have their accrual suspended temporarily.\n#' @param Y   Vector containing observed event or censoring times.\n#' @param I   Vector containing event indicators (1 if patient experiences an event for a patient).\n#' @param Doses Vector containing Doses of patients in trial.\n#' @param Groups Vector containing group assignment of patients, 1 is baseline group.\n#' @param T1 Reference time for toxicity.\n#' @param Target Target cumulative toxicity probability vector at time T1.\n#' @param Dose Vector containing the standardized doses considered.\n#' @param Upper Cutoff values used to determine if accrual in a subgroup should be suspended.\n#' @param DoseTried #Groups X #Doses Matrix that contains 1s and 0s corresponding to whether a given dose in a subgroup had been tried.\n#' @param meanmu Prior mean for baseline intercept.\n#' @param meanslope Prior mean for baseline slope.\n#' @param MeanInts Vector of prior means for the group specific intercept parameters.\n#' @param MeanSlopes Vector of prior means for the group specific slope parameters.\n#' @param varint Prior variance for the intercept parameters.\n#' @param varbeta Prior variance for the slope parameters.#' @return Returns a list with two objects, a vector of optimal doses and a vector of stopped groups\n#' @references\n#' [1] Chapple and Thall (2017), Subgroup Specific Dose Finding in Phase I Clinical Trials Based on Time to Toxicity Within a Fixed Follow Up Period.\n#' [2] Package Tutorial, https://adventuresinstatistics.wordpress.com/2017/08/24/the-subtite-package-tutorial/\n#' @examples\n#' T1=6\n#'##Reference Time for Toxicity\n#' Target=.3\n#' Upper=c(.95,.95)\n#' n=30\n#' Y=rep(NA,n)\n#' I=rep(NA,n)\n#' Groups = sample(1:2,n,replace=TRUE) - 1\n#' ##Group assignment of patients (MUST BE CODED 0,1,2,...)\n#' Doses = sample(1:5,n,replace=TRUE)\n#' ##Randomly Generate Dose assignment\n#' x=c(1,2,3,5,7)\n#' Dose=(x-mean(x))/sd(x)\n#' ##Vector of standardized doses\n#' ##Next we generate the toxicity times based on a true toxicity probability matrix\n#' GroupProb = matrix(rep(NA,length(Dose)*3),nrow=3)\n#' GroupProb[1,]=c(.18,.25,.45,.66,.74)\n#'  ## These are the true toxicity probabilities for each dose and subgroup\n#' GroupProb[2,]=c(.10,.15,.30,.50,.60) +.1\n#' for(b in 1:n){\n#' I[b]= rbinom(1,1   , GroupProb[(Groups[b]+1),Doses[b]])\n#' if(I[b]==0){ Y[b]=T1 }else{ Y[b]=runif(1,0,T1) }}\n#' DoseTried=matrix(c(1,1,0,0,0,1,1,1,1,1),ncol=5,byrow=TRUE)\n#'  ##Doses Tried so far in trial\n#' ##Hypermeans for linear terms\n#' meanmu=-0.4467184\n#' meanslope= 0.8861634\n#' MeanInts = -0.5205379\n#' MeanSlopes = 0.1888923\n#' Doses=Dose[Doses]\n#' varint=5\n#' varbeta=1\n#' GetSubTite(Y, I,Doses, Groups, DoseTried, T1,\n#'  Target,  Upper, Dose,  meanmu, meanslope,\n#'   MeanInts,  MeanSlopes ,varint,varbeta)\n#' @export\nGetSubTite=function(Y, I,Doses, Groups, DoseTried, T1, Target,\n                    Upper, Dose,  meanmu, meanslope,\n                    MeanInts,  MeanSlopes ,varint,varbeta){\n\n\n\n\n  OptDose=GetDose1( Y, I,Doses, Groups, DoseTried, T1, Target,  Upper, Dose,\n                    meanmu, meanslope,  MeanInts,  MeanSlopes ,varint,varbeta)\n\n\n  if(sum(OptDose)==0){\n    cat(\"Stop Trial if at least one cohort of both subgroup have been fully evaluated.\")\n  }else{\n    cat(paste(\"Enroll the next patient in subgroup 0 at Dose\",OptDose[1],\"and the next patient in subgroup 1 at Dose\",OptDose[2]))\n  }\n\n\n  return(OptDose)\n\n\n}\n\n\n\n\n\n\n\n\n",
    "created" : 1506979765572.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3736957879",
    "id" : "A56792F0",
    "lastKnownWriteTime" : 1508377999,
    "last_content_update" : 1508377999108,
    "path" : "D:/Users/Andrew/Desktop/Rice/Dr.Thall/SubTite/R/GetSubTite.R",
    "project_path" : "R/GetSubTite.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}