{
    "collab_server" : "",
    "contents" : "#' Simulates a Sub-TITE trial design\n#'\n#' Simulates replicates from a Sub-TITE trial with user specified true toxicity time distributions for different doses and subgroups and returns average summary statistics of the trial.\n#' @importFrom stats pexp pweibull pgamma plnorm rexp rbinom runif rweibull rgamma rlnorm rnorm var nls\n#' @importFrom Rcpp evalCpp\n#' @param nSims Number of Trials to Simulate.\n#' @param Nmax Maximum Number of Patients to enroll in the trial.\n#' @param T1 Reference time for toxicity.\n#' @param Target Target cumulative toxicity probability (or subgroup specific vector) at time T1.\n#' @param Dose Standardized vector of doses to try.\n#' @param DoseStart Dose (or vector of Doses) to enroll the first patient in each subgroup at.\n#' @param Accrue Expected montly patient accrual rate.\n#' @param groupprob Probability vector of subgroup assignment.\n#' @param Upper Cutoff values used to determine if accrual in a subgroup should be suspended.\n#' @param Hyper List of size 4 containing the prior mean of the baseline slope, the baseline intercept, and the prior mean vectors for group specific intercepts and slopes.\n#' @param Family What distribution Family to simulate from. Options include: Exponential,Gamma, Lognormal, Uniform, Weibull.\n#' @param Param1 #Groups X #Doses Matrix containing the first parameter for each subgroup and dose. For the uniform distribution, this is the probability of toxicity in a given group.\n#' @param Param2 #Groups X #Doses Matrix containing the second parameter for each subgroup and dose for the Weibull, Gamma and Lognormal Distributions. This argument is not used for uniform and exponential distribution families.\n#' @param VarInt Prior Variance of Intercept Parameters\n#' @param VarSlope Prior Variance of Slope Parameters\n#' @return Returns a list with five simulation outputs: The vector of optimal doses chosen, the number of toxicities per group, the trial times of each simulated trial, the vector containing the doses administered in a trial and the group assignments of each patient in a simulated trial.\n#' @references\n#' [1] Chapple and Thall (2017), Subgroup-specific dose finding in phase I clinical trials based on time to toxicity allowing adaptive subgroup combination\n#' @examples\n#' ##Note: nSims  should be set larger than the example below.\n#' nSims=1\n#' ##Specify reference toxicity time and target\n#' T1=6\n#' Target=.3\n#' ##Number of Groups\n#' ##Specify upper bound for determining if the lowest dose is too toxic in a subgroup\n#' Upper=c(.95,.95)\n#' ##Maximum Sample Size\n#' Nmax=40\n#' ##Standardized Dose Values and starting dose index\n#' Dose=sort(rnorm(4))\n#' DoseStart=1\n#' ##Hypermeans for linear terms\n#' meanmu=2.21\n#' meanslope=-.57\n#' MeanInts = c(.46)\n#' MeanSlopes = c(.04)\n#' ##Accrual Rate\n#' Accrue=2\n#' groupprob=c(.5,.5)\n#' ##Fill in Hyperparameter list for MCMC\n#' Hyper=as.list(c(0,0,0,0))\n#' Hyper[[1]]=meanmu\n#' Hyper[[2]]=meanslope\n#' Hyper[[3]]=MeanInts\n#' Hyper[[4]]=MeanSlopes\n#' Family=\"Uniform\"\n#' Param1 = matrix(c(.2,.3,.4,.5,.6,.1,.2,.3,.4,.5),byrow=TRUE,nrow=2)\n#' Param2=Param1\n#' VarInt=5\n#' VarSlope=1\n#' SimTrial(nSims,Nmax,T1,Target,Dose,DoseStart,\n#' Upper,Accrue,groupprob,Hyper,Family,Param1,Param2,VarInt,VarSlope)\n#' @export\nSimTrial = function(nSims,Nmax,T1,Target,Dose, DoseStart,Upper,Accrue,groupprob,Hyper,Family,Param1,Param2,VarInt,VarSlope){\n\n\n\n  nGroups=nrow(Param1)\n  nGroup=nGroups\n  nDose=ncol(Param1)\n  upper=Upper\n\n  Dist = matrix(rep(NA,nSims*nrow(Param1)),nrow=nSims)\n\n\n  target=Target\n  B=2000\n\n\n\n\n\n  B=2000\n  meanmu = Hyper[[1]]\n  meanslope=Hyper[[2]]\n  MeanInts=Hyper[[3]]\n  MeanSlopes=Hyper[[4]]\n  nDoses=length(Dose)\n  target=Target\n\n\n  ##If length(Target)==1 or length(DoseStart)==1, let's make a vector containing the group specific targets\n\n  if(length(Target)==1){\n    Target1=Target\n    Target=rep(NA,nrow(Param1))\n    for(k in 1:nrow(Param1)){\n      Target[k]=Target1\n    }\n\n  }\n\n\n  if(length(DoseStart)==1){\n    DoseStart1=DoseStart\n    DoseStart=rep(NA,nrow(Param1))\n    for(k in 1:nrow(Param1)){\n      DoseStart[k]=DoseStart1\n    }\n\n  }\n\n\n  if(length(Upper)==1){\n    Upper1=Upper\n    Upper=rep(NA,nrow(Param1))\n    for(k in 1:nrow(Param1)){\n      Upper[k]=Upper1\n    }\n\n  }\n\n\n\n  if(Family==\"Exponential\"){\n    GroupProb = pexp(T1,1/Param1)\n    Fam=0\n  }\n\n  if(Family==\"Uniform\"){\n\n    GroupProb=Param1\n    Fam=3\n  }\n\n  if(Family==\"Weibull\"){\n    GroupProb=pweibull(T1,Param1,Param2)\n    Fam=4\n  }\n\n  if(Family==\"Gamma\"){\n    GroupProb=pgamma(T1,Param1,Param2)\n    Fam=1\n  }\n\n  if(Family==\"Lognormal\"){\n    GroupProb=plnorm(T1,Param1,Param2)\n    Fam=2\n  }\n\n\n\n\n  POPT=rep(NA,nGroups)\n  WHICHOPT=POPT\n  ##What is POPT\n\n  for(m in 1:nGroups){\n    min1 = min(abs(GroupProb[m,]-Target[m]))\n    which1 =  which(abs(GroupProb[m,]-Target[m])==min1)\n    POPT[m]=GroupProb[m,which1]\n    WHICHOPT[m]=which1\n\n  }\n\n\n\n  ##Feed Everything into the trial\nResults= SimTrial1( nSims, Nmax,  T1, Target,  Dose,  DoseStart,Upper, Accrue, groupprob,\n                    Fam, Param1,Param2,meanmu, meanslope,MeanInts, MeanSlopes,VarInt,VarSlope )\n\nDoseOpt = Results[[1]]\nNTox=Results[[2]]\n\n\n##Calculate \\Delta_1,\\Delta_2\nfor(b in 1:nSims){\n\n  for(m in 1:nGroups){\n    if(DoseOpt[b,m]==0){\n      Dist[b,m]=POPT[m]\n    }else{\n      Dist[b,m]=abs(GroupProb[m,DoseOpt[b,m]]-POPT[m])\n    }\n  }\n\n\n\n\n\n\n\n}\n\n\n\n  cat(\"Simulations finished: Displaying results\n\n      \")\n\n\n  ##Obtain the prob of best\n\n  OptProb=WHICHOPT\n\n\n  for(m in 1:nGroups){\n    OptProb[m]=mean(DoseOpt[,m]==WHICHOPT[m])\n  }\n\n  for(m in 1:nGroups){\n    if(GroupProb[m,1]>Target[m]){\n      OptProb[m]=NA\n      Dist[m]=NA\n    }\n  }\n\n\n  cat(\"Subgroup Specific Selection Probability of the Optimal Dose\", OptProb )\n\n\n  cat(\"\n\n      Frequencies of Optimal Dose Selected for each Subgroup\")\n\n  for(m in 1:nGroups){\n\n    cat(\"\n        Group\", m,\"\n        \")\n\n    print(table(DoseOpt[,m])/nSims)\n  }\n\n\n  cat(\"\n      Average true toxicity probability difference between chosen dose and the optimal dose\n\n      \")\n\n  print(colMeans(Dist))\n\n\n\n  cat(\"\n      Average number of Toxicities for each Subgroup\n\n      \")\n\n  print(colMeans(NTox))\n\nTrialTimes=Results[[3]]\n\n\n\ncat(\"\n      Average number Treated for each Subgroup\n\n    \")\n\nprint(table(Results[[5]])/nSims)\n\n\n\n\n\n  cat(\"\n      Average Trial Time\n\n      \")\n  print(mean(TrialTimes))\n\n  List1 = as.list(rep(0,6))\n  List1[[1]]=DoseOpt\n  List1[[2]]=Dist\n  List1[[3]]=NTox\n  List1[[4]]=TrialTimes\n\n\n  List1[[5]]=Results[[4]]\n  List1[[6]]=Results[[5]]\n\n\n  return(List1)\n\n\n}\n\n",
    "created" : 1504814120161.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "59|124|282|0|\n",
    "hash" : "4270626392",
    "id" : "F7994C9",
    "lastKnownWriteTime" : 1508770168,
    "last_content_update" : 1508770168205,
    "path" : "D:/Users/Andrew/Desktop/Rice/Dr.Thall/SubTite/R/SimTrial.R",
    "project_path" : "R/SimTrial.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}