{
    "collab_server" : "",
    "contents" : "#' Calibrates prior means for Dose Finding Trial\n#'\n#'  Uses the clinician elicited prior reference probabilities for each subgroup and dose to obtain prior means for the Bayesian logistic regression model used in the SubTite trial design.\n#' @param Clinician #Groups X #Doses matrix containing the elicited prior toxicity probabilities at the reference time for each dose and subgroup.\n#' @param Dose Vector containing standardized doses.\n#' @return Returns the nonlinear regression model whos parameter estimates will be used as prior means for the SubTITE Design.\n#' @references\n#' [1] Chapple and Thall (2017), Subgroup-specific dose finding in phase I clinical trials based on time to toxicity allowing adaptive subgroup combination\n#' @examples\n#' ##Specify elicited reference toxicity probabilities\n#' Clinician = matrix(c(.2,.3,.4,.5,.6,.1,.2,.3,.4,.5,.05,.1,.15,.2,.3),byrow=TRUE,nrow=3)\n#' Dose=sort(rnorm(5))\n#' GetPriorMeans(Clinician,Dose)\n#' @export\nGetPriorMeans = function(Clinician,Dose){\n\n  X=Clinician\n  nGroups=nrow(X)\n\n  Y = rep(NA,length(X))\n\n  for(m in 1:nrow(X)){\n\n    for(k in 1:ncol(X)){\n\n      Y[(m-1)*ncol(X)+k] = log(X[m,k]/(1-X[m,k]))\n\n    }\n\n\n  }\n\n  ##Now we have our Y lets make X\n  ##It's going to be structured intercept, group ints, slope, group slopes\n  ##Number of Groups\n  G=nrow(X)\n  G2=G-1\n  D=length(Dose)\n\n  COV = matrix(rep(0,length(Y)*2*G),nrow=length(Y))\n  COV[,1]=1\n\n\n  DOSEVEC=Y\n\n  for(m in 1:G){\n    DOSEVEC[((m-1)*length(Dose)+1):(m*length(Dose))]=Dose\n  }\n\n\n\n\n\n\n\n\n  if(nGroups==2){\n\n    Group=c(rep(0,length(Dose)),rep(1,length(Dose)))\n    Group1=Group==1\n\n\n\n\n\n\n\n    m1 <- nls(Y ~ alpha + alpha1*Group1+exp(beta+beta1*Group1)*DOSEVEC,\n              start = list(alpha=0,alpha1=0,beta=0,beta1=0))\n\n\n    print(m1)\n\n\n\n  }\n\n\n\n\n\n\n  if(nGroups==3){\n\n    Group=c(rep(0,length(Dose)),rep(1,length(Dose)),rep(2,length(Dose)))\n    Group1=Group==1\n    Group2=Group==2\n\n\n\n\n\n\n\n    m1 <- nls(Y ~ alpha + alpha1*Group1+alpha2*Group2+exp(beta+beta1*Group1+beta2*Group2)*DOSEVEC,\n              start = list(alpha=0,alpha1=0, alpha2=0,beta=0,beta1=0,beta2=0))\n\n\n    print(m1)\n\n\n\n  }\n\n\n\n\n\n  if(nGroups==4){\n\n    Group=c(rep(0,length(Dose)),rep(1,length(Dose)),rep(2,length(Dose)),rep(3,length(Dose)))\n    Group1=Group==1\n    Group2=Group==2\n    Group3=Group==3\n\n\n\n\n\n\n\n    m1 <- nls(Y ~ alpha + alpha1*Group1+alpha2*Group2+alpha3*Group3+exp(beta+beta1*Group1+beta2*Group2+beta3*Group3)*DOSEVEC,\n              start = list(alpha=0,alpha1=0, alpha2=0,alpha3=0,beta=0,beta1=0,beta2=0,beta3=0))\n\n\n    print(m1)\n\n\n\n  }\n\n\n\n\n\n\n\n\n\n\n\n  if(nGroups==5){\n\n    Group=c(rep(0,length(Dose)),rep(1,length(Dose)),rep(2,length(Dose)),rep(3,length(Dose)),rep(4,length(Dose)))\n    Group1=Group==1\n    Group2=Group==2\n    Group3=Group==3\n    Group4=Group==4\n\n\n\n\n\n\n\n    m1 <- nls(Y ~ alpha + alpha1*Group1+alpha2*Group2+alpha3*Group3+alpha4*Group4+exp(beta+beta1*Group1+beta2*Group2+beta3*Group3+beta4*Group4)*DOSEVEC,\n              start = list(alpha=0,alpha1=0, alpha2=0,alpha3=0,alpha4=0,beta=0,beta1=0,beta2=0,beta3=0,beta4=0))\n\n\n    print(m1)\n\n\n\n  }\n\n\n\n\n\n\n\n\n  if(nGroups==6){\n\n    Group=c(rep(0,length(Dose)),rep(1,length(Dose)),rep(2,length(Dose)),rep(3,length(Dose)),rep(4,length(Dose)),rep(5,length(Dose)))\n    Group1=Group==1\n    Group2=Group==2\n    Group3=Group==3\n    Group4=Group==4\n    Group5=Group==5\n\n\n\n\n\n\n\n    m1 <- nls(Y ~ alpha + alpha1*Group1+alpha2*Group2+alpha3*Group3+alpha4*Group4+alpha5*Group5+exp(beta+beta1*Group1+beta2*Group2+beta3*Group3+beta4*Group4+beta5*Group5)*DOSEVEC,\n              start = list(alpha=0,alpha1=0, alpha2=0,alpha3=0,alpha4=0,alpha5=0,beta=0,beta1=0,beta2=0,beta3=0,beta4=0,beta5=0))\n\n\n    print(m1)\n\n\n\n  }\n\n\n  if(nGroups>6){\n    cat(\"Code only supports up to 6 subgroups, contact maintainer if you desire more\")\n\n  }\n\n\n\n\n\n\n\n\n\n}\n",
    "created" : 1508355732657.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "108|17|129|2|\n141|17|163|2|\n172|17|195|2|\n",
    "hash" : "2989915001",
    "id" : "ECEDC569",
    "lastKnownWriteTime" : 1508361713,
    "last_content_update" : 1508361713351,
    "path" : "D:/Users/Andrew/Desktop/Rice/Dr.Thall/SubTite/R/GetPriorMeans.R",
    "project_path" : "R/GetPriorMeans.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}